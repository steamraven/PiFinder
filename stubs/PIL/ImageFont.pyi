from typing import Protocol
from . import Image as Image
from ._util import DeferredError as DeferredError, is_directory as is_directory, is_path as is_path
from _typeshed import Incomplete
from enum import IntEnum

class Layout(IntEnum):
    BASIC: int
    RAQM: int

MAX_STRING_LENGTH: int


class _Font(Protocol):
    def getmask(self, text: str | bytes, mode: str = ..., direction=..., features=...): ...

class ImageFont:
    def getmask(self, text, mode: str = ..., *args, **kwargs): ...
    def getbbox(self, text, *args, **kwargs): ...
    def getlength(self, text, *args, **kwargs): ...

class FreeTypeFont:
    path: Incomplete
    size: Incomplete
    index: Incomplete
    encoding: Incomplete
    layout_engine: Incomplete
    font_bytes: Incomplete
    font: Incomplete
    def __init__(self, font: Incomplete | None = ..., size: int = ..., index: int = ..., encoding: str = ..., layout_engine: Incomplete | None = ...) -> None: ...
    def getname(self): ...
    def getmetrics(self): ...
    def getlength(self, text, mode: str = ..., direction: Incomplete | None = ..., features: Incomplete | None = ..., language: Incomplete | None = ...): ...
    def getbbox(self, text, mode: str = ..., direction: Incomplete | None = ..., features: Incomplete | None = ..., language: Incomplete | None = ..., stroke_width: int = ..., anchor: Incomplete | None = ...): ...
    def getmask(self, text, mode: str = ..., direction: Incomplete | None = ..., features: Incomplete | None = ..., language: Incomplete | None = ..., stroke_width: int = ..., anchor: Incomplete | None = ..., ink: int = ..., start: Incomplete | None = ...): ...
    def getmask2(self, text, mode: str = ..., direction: Incomplete | None = ..., features: Incomplete | None = ..., language: Incomplete | None = ..., stroke_width: int = ..., anchor: Incomplete | None = ..., ink: int = ..., start: Incomplete | None = ..., *args, **kwargs): ...
    def font_variant(self, font: Incomplete | None = ..., size: Incomplete | None = ..., index: Incomplete | None = ..., encoding: Incomplete | None = ..., layout_engine: Incomplete | None = ...): ...
    def get_variation_names(self): ...
    def set_variation_by_name(self, name) -> None: ...
    def get_variation_axes(self): ...
    def set_variation_by_axes(self, axes) -> None: ...

class TransposedFont:
    font: Incomplete
    orientation: Incomplete
    def __init__(self, font, orientation: Incomplete | None = ...) -> None: ...
    def getmask(self, text, mode: str = ..., *args, **kwargs): ...
    def getbbox(self, text, *args, **kwargs): ...
    def getlength(self, text, *args, **kwargs): ...


def load(filename): ...
def truetype(font: Incomplete | None = ..., size: int = ..., index: int = ..., encoding: str = ..., layout_engine: Incomplete | None = ...) -> FreeTypeFont: ...
def load_path(filename): ...
def load_default(): ...
