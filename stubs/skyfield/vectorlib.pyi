from .constants import C_AUDAY as C_AUDAY
from .descriptorlib import reify as reify
from .errors import DeprecationError as DeprecationError
from .functions import length_of as length_of
from .positionlib import build_position as build_position, ICRF
from .timelib import Time as Time
from _typeshed import Incomplete

_Vector = Union[VectorFunction, ICRF]

class VectorFunction:
    ephemeris: Incomplete
    def vector_name(self): ...
    def center_name(self): ...
    def target_name(self): ...
    def arrow_str(self): ...
    def __add__(self, other: _Vector)-> VectorFunction: ...
    def __neg__(self): ...
    def __sub__(self, other): ...
    def at(self, t: Time) -> ICRF: ...
    def geometry_of(self, other) -> None: ...
    def topos(self, latitude: Incomplete | None = ..., longitude: Incomplete | None = ..., latitude_degrees: Incomplete | None = ..., longitude_degrees: Incomplete | None = ..., elevation_m: float = ..., x: float = ..., y: float = ...) -> None: ...
    def satellite(self, text) -> None: ...

class ReversedVector(VectorFunction):
    center: Incomplete
    target: Incomplete
    vector_function: Incomplete
    def __init__(self, vector_function) -> None: ...
    def vector_name(self): ...
    def center_name(self): ...
    def target_name(self): ...
    def __neg__(self): ...

class VectorSum(VectorFunction):
    center: Incomplete
    target: Incomplete
    vector_functions: Incomplete
    ephemeris: Incomplete
    def __init__(self, center, target, vector_functions) -> None: ...
